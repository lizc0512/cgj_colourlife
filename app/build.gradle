apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.mob.sdk'
apply from: 'tinker-support.gradle'
android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.tg.coloursteward"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 110
        versionName "6.5.3"
        // Enabling multidex support.
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "a923c16ad07f805480d67b2b", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            res.srcDirs = ['src/main/res',
                           'src/main/java/com/tg/user/res',
                           'src/main/java/com/tg/setting/res',
                           'src/main/java/com/tg/im/res',
                           'src/main/java/com/tg/money/res',
                           'src/main/java/com/tg/point/res',
                           'src/main/java/com/tg/delivery/res',
            ]
        }
    }
    signingConfigs {
        release {
            storeFile file('cgj.keystore')
            storePassword '123456'
            keyAlias '彩管家'
            keyPassword '123456'
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    //指定打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == "release") {
                outputFileName = "Cgj_v${defaultConfig.versionName}_${getPackageInfo(variant)}_${releaseTime()}.apk"
            } else {
                outputFileName = "Cgj_v${defaultConfig.versionName}_${getPackageInfo(variant)}_${releaseTime()}_debug.apk"
            }

            variant.assemble.doLast {
                copyBuildApk()
            }

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

MobSDK {
    appKey "2bddd88dc12cc"
    appSecret "0f700013a3ff97a9b214e7df97559268"

    ShareSDK {
        //平台配置信息
        devInfo {
            Wechat {
                appId "wx2cd55a3733a9aa2e"
                appSecret "2c64f186555de7b3eeca3d6203c4573a"
            }
            WechatMoments {
                AppId = "wx2cd55a3733a9aa2e"
                AppSecret = "2c64f186555de7b3eeca3d6203c4573a"
            }
        }
    }

}

repositories {
    flatDir {
        dirs 'libs'
        dirs project(':huxin_sdk').file('libs')
    }
    maven {
        url "http://maven.aliyun.com/nexus/content/repositories/releases"
    }
    google()
    mavenCentral()
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':huxin_sdk')
    implementation(name: 'gt3geetest_sdk', ext: 'aar')
    implementation(name: 'keyboard_sdk_src-release', ext: 'aar')
    implementation 'com.flyco.banner:FlycoBanner_Lib:2.0.2@aar'
    implementation 'cn.jiguang.sdk:jpush:3.1.3'
    // JPush 3.1.1 版本。
    implementation 'cn.jiguang.sdk:jcore:1.2.1'
    // JCore 1.1.9
    implementation 'com.loopj.android:android-async-http:1.4.6'
    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
    //banner公告
    implementation 'com.jcodecraeer:xrecyclerview:1.5.9'
    //android x
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    implementation 'com.yanzhenjie.nohttp:nohttp:1.1.11'
    implementation 'com.yanzhenjie.recyclerview:support:1.3.1'
    implementation 'com.hjq:xxpermissions:5.5'
    implementation 'com.facebook.rebound:rebound:0.3.8'
    implementation 'cn.bingoogolapple:bga-banner:2.2.6'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.13'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    implementation(name: 'lekai-open-sdk-v3.0.9', ext: 'aar')
    implementation project(path: ':hellocharts-library')
    //乐开
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.3.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'
    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.7'
    implementation project(path: ':keeplive')
    implementation files('libs/tbs_sdk_thirdapp_v4.3.0.3_43903_sharewithdownloadwithfile_withoutGame_obfs_20200402_121309.jar')
    implementation files('libs/expandbarcodescannersdk.jar')
}

project.afterEvaluate {
    handleBuildTag()
}

def copyBuildApk() {
    copy {
        from("${buildDir}/outputs/apk/release") {
            include "*.apk"
        }
        into '../dist'
    }
}


def handleBuildTag() {
    def launch = getLaunchMode()
    if (launch != null) {
        def appCfgFilePath = "../huxin_sdk/src/main/java/com/youmai/hxsdk/config/AppConfig.java"
        def appCfgRegexStr = "public\\s+final\\s+static\\s+int\\s+LAUNCH_MODE\\s+=\\s+[012];"
        def appCfgReplaceStr = "public final static int LAUNCH_MODE = " + launch + ";"
        handleReplaceSrc project, appCfgRegexStr, appCfgReplaceStr, appCfgFilePath
    }
}


def getLaunchMode() {
    if (project.hasProperty('launch_mode')) {
        return project.getProperties().getAt('launch_mode')
    } else {
        return 1      //default 正式环境
    }
}

def getPackageInfo(variant) {
    def launch = getLaunchMode()

    if (launch == "0") {
        return "test_color"
    } else if (launch == "1") {
        return "beta_color"
    } else if (launch == "2") {
        return "rel_color"
    }
}


def static handleReplaceSrc(project, regexStr, replaceStr, filePath) {
    def srcFile = project.file filePath
    def newReplaceStr = srcFile.text.replaceAll regexStr, replaceStr
    srcFile.write newReplaceStr, "UTF-8"
}

def static releaseTime() {
    return new Date().format("MMdd_HHmm")
}
